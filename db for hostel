create database hosteldatabase;

SELECT * FROM student WHERE name = 'admin' /*' AND password = 'password' */

create table block (
	blockId int auto_increment primary key,
    blockCode varchar(255), 
    location varchar(255),
    isActive tinyint(1),
    createdAt timestamp default current_timestamp,
    createdBy int, 
    updatedAt timestamp default current_timestamp on update current_timestamp,
    updatedBy int, 
    deletedAt timestamp,
    deletedBy int
);
ALTER TABLE block ADD UNIQUE (blockCode);
insert into block (blockCode,location,isActive) values ('A-Block','North',1);
update block set isActive = 0 where blockId = 1;

create table blockfloor (
	blockFloorId int auto_increment primary key,
	blockId int, 
	floorNumber int,
    isActive tinyint(1),
	createdAt timestamp default current_timestamp,
	createdBy int, 
	updatedAt timestamp default current_timestamp on update current_timestamp, 
	updatedBy int, 
	deletedAt timestamp, 
	deletedBy int,
    constraint fk_blockfloor_blockId foreign key (blockId)
    references block(blockId)
)

select * from blockfloor;

create table room (
	roomId int auto_increment primary key, 
	blockFloorId int,
	blockId int, 
	roomNumber int, 
	roomCapacity int, 
	isAc tinyint(1), 
	createdAt timestamp default current_timestamp,
	createdBy int, 
	updatedAt timestamp default current_timestamp on update current_timestamp,
	updatedBy int, 
	deletedAt timestamp, 
	deletedBy int,
    constraint fk_room_blockFloorId foreign key (blockFloorId)
    references blockfloor(blockFloorId),
    constraint fk_room_blockId foreign key (blockId)
    references block(blockId)
);

select * from room;


create table student (
	studentId int auto_increment,
	roomId int, 
	blockFloorId int, 
	blockId int, 
	name varchar(255), 
	registerNumber varchar(255), 
	dob date, 
	courseId int, 
	joinedDate date, 
	phoneNumber int(10), 
	emailId varchar(255), 
	fatherName varchar(255), 
	fatherNumber int(10), 
	address varchar(255), 
	createdAt timestamp default current_timestamp,
	createdBy int, 
	updatedAt timestamp default current_timestamp on update current_timestamp,
	updatedBy int, 
	deletedAt timestamp, 
	deletedBy int,
    primary key(studentId, emailId),
    constraint fk_studenId_roomId foreign key (roomId)
    references room(roomId),
    constraint fk_studenId_blockFloorId foreign key (blockFloorId)
    references blockfloor(blockFloorId),
    constraint fk_studentId_blockId foreign key (blockId)
    references block(blockId),
    constraint fk_studentId_courseId foreign key (courseId)
    references course(courseId)
);

select * from student;

create table course (
	courseId int auto_increment primary key,
	courseName varchar(255)
);
drop table course;

select * from course;

create table attendance (
	attendanceId int auto_increment primary key,
	studentId int, 
	roomId int, 
	blockFloorId int, 
	blockId int, 
	date date, 
	isPresent tinyint(1), 
	wardenId int, 
	createdAt timestamp default current_timestamp,
    constraint fk_attendance_wardenId foreign key (wardenId)
    references warden(wardenId)
);
select * from attendance;

create table warden (
	wardenId int auto_increment primary key,
	name varchar(255), 
	dob date, 
	username varchar(255), 
	password varchar(255), 
	createdAt timestamp default current_timestamp,
	createdBy int,
	updatedAt timestamp default current_timestamp on update current_timestamp,
	updatedBy int, 
	deletedAt timestamp,
	deletedBy int
);
select * from warden;
alter table block
add constraint fk_block_deletedBy
foreign key (deletedBy) references warden(wardenId);

alter table block
add constraint fk_block_createdBy
foreign key (createdBy) references warden(wardenId);

alter table block
add constraint fk_block_updatedBy
foreign key (updatedBy) references warden(wardenId);

alter table student
add constraint fk_student_deletedBy
foreign key (deletedBy) references warden(wardenId);

alter table student
add constraint fk_student_createdBy
foreign key (createdBy) references warden(wardenId);

alter table student
add constraint fk_student_updatedBy
foreign key (updatedBy) references warden(wardenId);

alter table block
drop foreign key fk_deletedBy;

alter table blockfloor
add constraint fk_blockfloor_deletedBy
foreign key (deletedBy) references warden(wardenId);

alter table blockfloor
add constraint fk_blockfloor_updatedBy
foreign key (updatedBy) references warden(wardenId);

alter table blockfloor
add constraint fk_blockfloor_createdBy
foreign key (createdBy) references warden(wardenId);


alter table room
add constraint fk_room_deletedBy
foreign key (deletedBy) references warden(wardenId);



alter table room
add constraint fk_room_updatedBy
foreign key (updatedBy) references warden(wardenId);

alter table room
add constraint fk_room_createdBy
foreign key (createdBy) references warden(wardenId);


insert into course (courseName)values ('BCOM');

alter table attendance
add constraint fk_attendance_studentId
foreign key (studentId) references student(studentId);

update course set courseName = 'BSC' where courseId = 1;
select * from course;
select * from course where courseId = 1;
delete from course where courseId = 3;
update course set deletedBy = null where courseId = 4

alter table warden
add constraint fk_warden_createdBy
foreign key (createdBy) references warden(wardenId);

alter table warden
add constraint fk_warden_updatedBy
foreign key (updatedBy) references warden(wardenId);

alter table warden
add constraint fk_warden_deletedBy
foreign key (deletedBy) references warden(wardenId);


select * from block;
select * from warden;
select * from warden where deletedAt is null;
insert into warden (name,dob,username,password,createdBy) values ('RamKumar','1999-10-09','ram','ramram','1');
select * from blockfloor;

select * from room;
insert into room(blockFloorId,blockId,roomNumber,roomCapacity,isActive,isAc,createdBy) values(1,1,6,5,1,1,6);
ALTER TABLE room
ADD COLUMN isActive TINYINT(1) AFTER roomCapacity;
select * from blockfloor;

insert into blockfloor(blockId,floorNumber,isActive,createdBy) values (1,22,1,6);
update blockfloor set blockId = 2 where blockFloorId = 1;

select * from blockfloor where blockfloorId = 1;
update blockfloor set deletedAt = now(),deletedBy = 8 where blockfloorId = 8 and deletedAt is null

update blockfloor set blockId=1 where blockFloorId = 1;

update warden set name = "jamesDon" where wardenId = 6;

select * from student;
select now();

ALTER TABLE student MODIFY COLUMN fatherNumber varchar(10);
ALTER TABLE student MODIFY COLUMN phoneNumber varchar(10);

select * from course;


update block set deletedAt = now() where blockId = 3;
select * from block where deletedAt is Null;
update blockFloor set deletedAt = now() where blockFloorId = 1;

select * from attendance where attendanceId = 1;

select * from block where deletedAt is Null and isActive = 1;

select * from student where roomId = 1;

select count(*) from student where roomId = 1 and deletedAt is null;

select count(*) as count from student where roomId = 1 and deletedAt is null;

select * from room where roomId = 2000;

update room set blockfloorId = 4 where roomId = 14 and deletedAt is null;

alter table blockfloor MODIFY  blockCode unique;
update room set deletedAt = now(),deletedBy = 6 where roomId = 16 and deletedAt is null;

ALTER TABLE attendance
ADD COLUMN updateAt int;


ALTER TABLE attendance
RENAME COLUMN updateAt TO updatedAt;

ALTER TABLE attendance

ADD COLUMN updatedBy int

alter table attendance
add constraint fk_attendance_updatedAt
foreign key (updatedAt) references warden(wardenId);

alter table attendance
add constraint fk_attendance_updatedBy
foreign key (updatedBy) references warden(wardenId);

select * from student where deletedAt is null;


ALTER TABLE room
RENAME COLUMN isAc TO isAirConditioner;

select * from course;
ALTER TABLE course
ADD COLUMN createdAt timestamp default current_timestamp AFTER courseName;

ALTER TABLE course
ADD COLUMN createdBy int AFTER createdAt;

ALTER TABLE course
ADD COLUMN updatedAt timestamp default current_timestamp on update current_timestamp AFTER createdBy;

ALTER TABLE course
ADD COLUMN updatedBy int AFTER updatedAt;

ALTER TABLE course
ADD COLUMN deletedAt timestamp AFTER updatedBy;

ALTER TABLE course
ADD COLUMN deletedBy int AFTER deletedAt;

alter table course
add constraint fk_course_createdBy
foreign key (createdBy) references warden(wardenId);

alter table course
add constraint fk_course_updatedBy
foreign key (updatedBy) references warden(wardenId);

alter table course
add constraint fk_course_deletedBy
foreign key (deletedBy) references warden(wardenId);

SELECT * FROM attendance;

ALTER TABLE attendance
DROP FOREIGN KEY fk_attendance_updatedAt;

ALTER TABLE attendance
MODIFY COLUMN updatedAt timestamp default current_timestamp on update current_timestamp;

insert into warden (name, dob, username, password) values('boopathi','2000-10-09','boop','boop00');
SELECT * FROM warden;

SELECT * FROM warden WHERE username = 0 AND password = "prem234"

ALTER TABLE warden
RENAME COLUMN username to emailId;

ALTER TABLE warden
ADD CONSTRAINT UC_warden_emailId UNIQUE (emailId);

ALTER TABLE course
ADD CONSTRAINT UC_course_courseName UNIQUE (courseName);

SELECT emailId, COUNT(*) 
FROM warden 
GROUP BY emailId 
HAVING COUNT(*) > 1;

SELECT * FROM hosteldatabase.attendance;
select studentId from attendance where attendanceId = 2;
select count(*) as count from attendance where studentId = 2

SELECT * FROM attendance WHERE studentId = 6 AND date >= "2024-01-01"  AND date <= "2024-08-11"
SELECT * FROM attendance WHERE studentId = 6 AND date >= "8"  AND date <= "10"

select * from attendance where MONTH(date) = 8 AND YEAR(date) = 2024 AND studentId = 6

select * from attendance where date >= "2024-01-01"  AND date <= "2024-08-11" AND studentId = 6

ALTER TABLE student
ADD CONSTRAINT UC_student_phoneNumber UNIQUE (phoneNumber);

ALTER TABLE student
ADD CONSTRAINT UC_student_fatherNumber UNIQUE (fatherNumber);

